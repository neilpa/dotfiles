#!/bin/sh
#
# TODO

#set -e
#set -x

# Use the XDG convention for storing dotfiles which reduces the
# number of config files that get symlinked to ~/.*
DOTFILES=$HOME/.config
DOTFILES_URL='https://github.com/neilpa/dotfiles'

case $(uname -s) in
    Darwin) OS=osx;;
    Linux)  OS=linux;;
esac

# TODO Move this elsewhere ...
# sudo keep-alive from https://gist.github.com/cowboy/3118588
sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

main () {
    download_dotfiles
    bootstrap_platform
    install_packages
    link_dotfiles
}

download_dotfiles () {
    # Ensure our dotfiles are installed locally
    if [ -d $DOTFILES ]
    then
        info 'Dotfiles already exist at ~/.config'
    else
        # TODO Download from a tarball, git may not be installed yet
        info 'Cloning my dotfiles repo to ~/.config'
        git clone $DOTFILES_URL $DOTFILES
    fi

    # TODO Do I really need this
    cd $DOTFILES
}

bootstrap_platform () {
    # Run the platform specific bootstrap script
    if [ -x $DOTFILES/bootstrap-$OS ]
    then
        sh -c $DOTFILES/bootstrap-$OS
    fi
}

install_packages () {
    info 'Running dotifle installers'
    for installer in $(find . -name "install" -o -name "install-$OS")
    do
        sh -c "${installer}"
    done
}

link_dotfiles () {
    info 'Symlinking dotfiles into ~/.*'
    for src in $(find . -maxdepth 2 -name "*.symlink" -o -name "*.symlink-$OS")
    do
        dst="$HOME/.$(basename "${src%.*}")"
        if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
        then
            user "File already exists: $(basename "$src"), skipping"
        else
            ln -s "$src" "$dst"
            success "linked $src to $dst"
        fi
    done
}

# TODO Share this better
info () {
    printf "  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
    printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
    echo ''
    exit
}

main

